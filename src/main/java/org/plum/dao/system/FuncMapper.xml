<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.plum.dao.system.FuncMapper">
  <resultMap id="BaseResultMap" type="org.plum.model.system.Func">
    <id column="funid" jdbcType="INTEGER" property="funid" />
    <result column="funcname" jdbcType="VARCHAR" property="funcname" />
    <result column="superid" jdbcType="INTEGER" property="superid" />
    <result column="order" jdbcType="TINYINT" property="order" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    funid, funcname, superid, `order`, path,icon
  </sql>
  <select id="selectAll" parameterType="org.plum.model.system.FuncExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_func
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_func
    where funid = #{funid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_func
    where funid = #{funid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.plum.model.system.Func">
    insert into sys_func (funcname, superid, 
      `order`, path,icon)
    values (#{funcname,jdbcType=VARCHAR}, #{superid,jdbcType=INTEGER}, 
      #{order,jdbcType=TINYINT}, #{path,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.plum.model.system.Func">
    update sys_func
    set funcname = #{funcname,jdbcType=VARCHAR},
      superid = #{superid,jdbcType=INTEGER},
      `order` = #{order,jdbcType=TINYINT},
      path = #{path,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR}
    where funid = #{funid,jdbcType=INTEGER}
  </update>
</mapper>